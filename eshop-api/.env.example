# The port the API is available at
PORT=3000
# The origin of incoming requests for CORS
CORS_ORIGIN=http://localhost:3001


# ========= Setup Option 1: For local development without docker =========
# DB_CLIENT represents the service which knex uses to connect to the database.
# This should be left as 'pg'
DB_CLIENT=pg
# DB_HOST represents the host running the postgres service
DB_HOST=127.0.0.1
# Access credentials for postgres sevice
DB_USER=postgres
DB_PASSWORD=
# database name
DB_NAME=eshop
# postgres service port
DB_PORT=5432


# ========= Setup Option 2: Docker for server/API + DB on Localhost  =========
# DB_CLIENT=pg

# Using a docker container for the API on localhost
# with postgres service also running on localhost
# To access the host from the container, the host
# must be set as host.docker.internal as follows:
# DB_HOST=host.docker.internal

# DB_USER=postgres
# DB_PASSWORD=
# DB_NAME=eshop
# # The port to access the DB from local host
# DB_PORT=5432


# ========= Setup Option 3: Docker for both server/API + DB  =========
# For local development with both node and
# postgres in docker containers
# DB_CLIENT=pg
# DB_HOST=postgres
# DB_USER=postgres
# DB_PASSWORD=postgres
# DB_NAME=eshop
# DB_PORT=5432
# POSTGRES_USER=${DB_USER}
# POSTGRES_PASSWORD=${DB_PASSWORD}
# POSTGRES_DB=${DB_NAME}


# ========= Production =========
# For local development with node in docker container
# and postgres running on local host
# DB_CLIENT=pg
# DB_HOST=
# DB_USER=postgres
# DB_PASSWORD=
# DB_NAME=eshop
# # The port to access the DB from local host
# DB_PORT=5432